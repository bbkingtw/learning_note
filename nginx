good
    https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching
    http://wiki.jikexueyuan.com/project/openresty/ngx/pitfalls_and_common_mistakes.html
module
    http_realip_module (如果上層是電信業者proxy, 為了取得正確user段ip)
        set_real_ip_from   192.168.1.0/24;     指定接收来自哪个前端发送的 IP head 可以是单个IP或者IP段
        set_real_ip_from   192.168.2.1;  
        real_ip_header     X-Real-IP;         IP head  的对应参数，默认即可。
    mod_concat
        模块由淘宝开发，目前已经包含在tengine中，并且淘宝已经在使用这个nginx模块。不过塔暂时没有包含在nginx中。这个模块类似于apache中的modconcat。如果需要使用它，需要使用两个"?"问号.
        来个范例：
        http://example.com/??style1.css,style2.css,foo/style3.css
        以上将原先3个请求合并为1个请求
    http_sub_module
        replace response string
    ngx_http_secure_link_module 
        used to check authenticity of requested links, 
        protect resources from unauthorized access, 
        and limit link lifetime.        
    http_slice_module (split large file)
        location ^~ /video-dump/ {
            slice; # enable slicing
            slice_start_arg s;
            slice_end_arg e;    
        }
        So we would request the first 1k of the file like this:

        http://example.com/video-dump/large_vid.mp4?s=0&e=1024
        Notice s=0, start at 0 and e=1024, stop at 1024 bytes (1k).        
        
    ngx_http_dav_module
        for file management automation via the WebDAV protocol. 
        The module processes HTTP and WebDAV methods PUT, DELETE, MKCOL, COPY, and MOVE.
        location / {
            root                  /data/www;

            client_body_temp_path /data/client_temp;

            dav_methods PUT DELETE MKCOL COPY MOVE;

            create_full_put_path  on;
            dav_access            group:rw  all:r;

            limit_except GET {
                allow 192.168.1.0/32;
                deny  all;
            }
        } 
    
video play
    https://shazi.info/nginx-%E5%88%A9%E7%94%A8-http_mp4_module-%E6%8E%A7%E5%88%B6-mp4-%E5%BD%B1%E7%89%87%E7%9A%84%E9%96%8B%E5%A7%8B%E7%B5%90%E6%9D%9F/

log format
    log_format upstreamlog '[$time_local] $remote_addr - $remote_user - $server_name  to: $upstream_addr: $request upstream_response_time $upstream_response_time msec $msec request_time $request_time';
    
install newest nginx under ubuntu 14.04
    https://gist.github.com/Globegitter/685e3739c0f181bda3ec#file-nginx-latest-sh-L32
    
config.conf
    http://www.codestance.com/tutorials-archive/nginx-tuning-for-best-performance-255
    http://www.jianshu.com/p/5e71f7159a85
    https://gist.github.com/denji/8359866
    https://www.digitalocean.com/community/tutorials/understanding-the-nginx-configuration-file-structure-and-configuration-contexts
    https://www.nginx.com/resources/wiki/start/topics/examples/full/
    http://seanlook.com/2015/05/17/nginx-location-rewrite/
    play some trick with elasticsearch samples
        https://www.elastic.co/blog/playing-http-tricks-nginx
  
DDos protection
    config: http://takeshiyako.blogspot.tw/2015/11/mitigating-ddos-attacks-nginx-module.html
    tool: fail2ban

log analysis
    utility
        goAccess
    url
        https://easyengine.io/tutorials/nginx/log-parsing/
        https://support.hypernode.com/knowledgebase/finding-the-top-10-visitors-by-parsing-the-nginx-access-logs/
        
ngx_lua        
    http://blog.csdn.net/chosen0ne/article/details/7304192
    http://www.slideshare.net/xqpmjh/openrestylua
    http://www.slideshare.net/harukayon/ngx-lua-public
    http://www.slideshare.net/VictorWelling/nginx-lua-43850373
    http://www.slideshare.net/ssuserf77241/openresty
    http://www.slideshare.net/xqpmjh/openrestylua
    http://www.slideshare.net/timebug/using-ngxlua-in-upyun
    https://github.com/openresty/lua-upstream-nginx-module

knowledge
    http://www.coctec.com/docs/service/show-post-2004.html
    http://www.coctec.com/docs/service/show-post-19926.html
    http://www.coctec.com/docs/service/show-post-28.html
    
watch performance    
    http://www.cyberciti.biz/faq/nginx-see-active-connections-connections-per-seconds/    
======================================================================
#limit special method
server {
  location / {
    # This proxy_pass is used for requests that don't
    # match the limit_except
    proxy_pass http://127.0.0.1:8080;

    # For requests that *aren't* a PUT, POST, or DELETE,
    # pass to :9080
    limit_except PUT POST DELETE {
      proxy_pass http://127.0.0.1:9080;
    }
  }
}

# Automatically instal the latest nginx
wget -O - http://nginx.org/keys/nginx_signing.key | sudo apt-key add -

#Make a backup copy of your current sources.list file
sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak

#Now copy the following repositories to the end of ` /etc/apt/sources.list`
echo "deb http://nginx.org/packages/mainline/ubuntu/ trusty nginx" | sudo tee -a /etc/apt/sources.list
echo "deb-src http://nginx.org/packages/mainline/ubuntu/ trusty nginx" | sudo tee -a /etc/apt/sources.list

#If you want to use the 'stable' branch take:
#echo "deb http://nginx.org/packages/ubuntu/ trusty nginx" | sudo tee -a /etc/apt/sources.list
#echo "deb-src http://nginx.org/packages/ubuntu/ trusty nginx" | sudo tee -a /etc/apt/sources.list

#update to get the new repository
sudo apt-get update
sudo apt-get install nginx

## Longer way ##
## Manually build and install the latest nginx ##

#Install the PCRE library needed by nginx
sudo apt-get install libpcre3 libpcre3-dev

#Replace by the latest version number found on http://nginx.org/
wget http://nginx.org/download/nginx-1.7.4.tar.gz

tar -xvf nginx-1.7.4.tar.gz

cd nginx-1.7.4

#These flags make sure to put nginx somewhere that is usuall in PATH and to activate the https module
./configure --sbin-path=/usr/local/sbin --with-http_ssl_module

make

sudo make install

# Download nginx startup script
wget -O init-deb.sh http://library.linode.com/assets/660-init-deb.sh

# Move the script to the init.d directory & make executable
sudo mv init-deb.sh /etc/init.d/nginx
sudo chmod +x /etc/init.d/nginx

# Add nginx to the system startup
sudo /usr/sbin/update-rc.d -f nginx defaults

# This automatically adds the nginx.conf from below into /etc/init/nginx.conf
# If something doesn't work, just copy it manually
sudo wget -O /etc/init/nginx.conf https://gist.githubusercontent.com/Globegitter/685e3739c0f181bda3ec/raw/6ec0def52ed49d29b2f00cae70d28689371d0230/nginx.conf

#This will make sure you get the following commands
#sudo service nginx start
#sudo service nginx stop
#sudo service nginx restart
#sudo service nginx status

##Now you can modify your nginx.conf in /usr/local/nginx/conf    

nginx.conf
=======================================================
description "nginx http daemon"
author "Philipp Klose <me@'thisdomain'.de>"

start on (filesystem and net-device-up IFACE=lo)
stop on runlevel [!2345]

env DAEMON=/usr/local/sbin/nginx
env PID=/usr/local/nginx/logs/nginx.pid

expect fork
respawn
respawn limit 10 5
#oom never

pre-start script
 $DAEMON -t
 if [ $? -ne 0 ]
 then exit $?
 fi
end script

exec $DAEMON
